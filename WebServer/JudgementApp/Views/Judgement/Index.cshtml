@using JudgementApp.Models;
@model List<JudgementApp.Models.Data>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    Company company = (Company)ViewData["Company"];
}

<body>
    <section class="contact-clean">
        <form name="form" id="JudgementForm" style="text-align: center;">
            <h2 class="text-center" id="ProblemName">@ViewData["contestName"]</h2>
            @{

                <table style="width:100%;">

                    <tr>

                        <td width="100px">
                            <img src="@company.Logo" style="width:100px;" />
                        </td>

                        <td>

                            <table>

                                <tr>

                                    <td>
                                        <label id="CompanyName">@company.EmailAddress</label>
                                        <label style="display:none;" id="PKCompany">@company.PKCompany</label>
                                    </td>
                                </tr>
                                <tr>

                                    <td>
                                        <label id="CompanyName">@company.CompanyName</label>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>



                </table>



            }
            <div class="mb-3">
                <br />
                <input class="form-control" type="text" id="UserName" name="UserName" required="required" placeholder="Name">
                
            </div>
            <div class="mb-3">
                <br />
                <input class="form-control" type="email" id="UserEmail" name="UserEmail" required="required" placeholder="Email Address">
                <div class="mb-3"><br /></div>
            </div>
            <div>
                @foreach (JudgementApp.Models.Data item in Model)
                {

                    string QResult = "Q" + item.Id + "_R";

                    var q = "Q" + item.Id;
                    <input id="@q" value="@item.Id" style="display:none;" />

                    <div class="card shadow mb-4" id="Question-1">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="text-primary fw-bold m-0">Question @item.Row_Num</h6>
                        </div>
                        @if (item.Type == 1)
                        {
                            <div class="card-body" style="text-align: left;">
                                <label class="form-label" style="text-align: left;font-weight: bold;">will @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) hit  @Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany) by  @Main.GetParameter(item.Id, "p3", Convert.ToString(ViewData["contestName"]), company.PKCompany)?</label>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fact"><label class="form-check-label" for="formCheck-1">Fact</label></div>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fiction"><label class="form-check-label" for="formCheck-2">Fiction</label></div>
                            </div>
                        }
                        @if (item.Type == 2)
                        {
                            <div class="card-body" style="text-align: left;">
                                <label class="form-label" style="text-align: left;font-weight: bold;">will @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) close  @Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany)  @Main.GetParameter(item.Id, "p3", Convert.ToString(ViewData["contestName"]), company.PKCompany)  @Main.GetParameter(item.Id, "p4", Convert.ToString(ViewData["contestName"]), company.PKCompany)?</label>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fact"><label class="form-check-label" for="formCheck-1">Fact</label></div>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fiction"> <label class="form-check-label" for="formCheck-2">Fiction</label></div>
                            </div>
                        }
                        @if (item.Type == 3)
                        {
                            <div class="card-body" style="text-align: left;">
                                <label class="form-label" style="text-align: left;font-weight: bold;">will  @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) have a higher return in the AM or PM?</label>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="AM"><label class="form-check-label" for="formCheck-1">AM</label></div>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="PM"><label class="form-check-label" for="formCheck-2">PM</label></div>
                            </div>
                        }
                        @if (item.Type == 4)
                        {
                            <div class="card-body" style="text-align: left;">
                                <label class="form-label" style="text-align: left;font-weight: bold;">will  @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) have a higher return before or after  @Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany)?</label>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Before"><label class="form-check-label" for="formCheck-1">Before</label></div>
                                <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="After"><label class="form-check-label" for="formCheck-2">After</label></div>
                            </div>
                        }

                    </div>
                }


                <input id="total" value="@Model.Count" style="display:none;" />
            </div><button class="btn btn-primary" type="button" onclick="onUpdate();" style="width: 170px">Submit</button>
            <br />
            <button class="btn btn-primary" type="button" onclick="location.href = '/leaderboard-@company.CompanyName-@ViewData["contestName"]'">Leaderboard</button>


        </form>
    </section>
    <script src="~/assets/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/assets/js/theme.js"></script>
    <script type="text/javascript">
        var result;

        function onUpdate() {
            debugger;

            var model = {};
            model.UserName = $("#UserName").val();
            model.UserEmail = $("#UserEmail").val();

            if (model.UserName.length < 1) {
                alert("Please enter the username")
            }
            else if (model.UserEmail.length < 1) {
                alert("Please enter the Email Address")

            }
              else {
                var judgment = [];
                result.forEach(item => {
                    debugger;
                    if (item.P1 == null || item.P1 == undefined) {
                        item.P1 = "null"
                    }
                    if (item.P2 == null || item.P2 == undefined) {
                        item.P2 = "null"
                    }
                    if (item.P3 == null || item.P3 == undefined) {
                        item.P3 = "null"
                    }
                    if (item.P4 == null || item.P4 == undefined) {
                        item.P4 = "null"
                    }
                    var QResult = $("input[name='Q" + item.Id + "_R']:checked").val();
                    judgment.push({ ID: item.Id, QResult: QResult, QType: item.Type, Param: item.P1 + "," + item.P2 + "," + item.P3 + "," + item.P4 })
                    var q = "Q" + item.Id;
                })
                model.UserName = $("#UserName").val();
                model.UserEmail = $("#UserEmail").val();
                model.ProblemName = $("#ProblemName").html();
                model.FKCompany = $("#PKCompany").html();
                debugger;
                model.Result = judgment;
                var fd = new FormData();
                fd.append('data', JSON.stringify(model));
                $.ajax({
                    url: '/Judgement/saveJudgement',
                    data: fd,
                    processData: false,
                    contentType: false,
                    type: 'POST',
                    success: function (data) {
                        window.location = "/Judgement/ResponseSubmitted"

                    }
                });
            } 
        }
        $(function () {

            var ProblemName = $("#ProblemName").html();
            var PKCompany = Number.parseInt($("#PKCompany").html());
            $.get("/Judgement/LoadData?id=" + PKCompany + '&ProblemName=' + ProblemName).then(s => {

                debugger;
                result = s;

            })
        })
    </script>
</body>
