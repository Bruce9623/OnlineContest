@using JudgementApp.Models;
@model List<JudgementApp.Models.Data>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    Company company = (Company)ViewData["Company"];
}

<body>
    <section class="contact-clean" id="mainSection">
        <form name="form" id="JudgementForm" style="text-align: center;">
            <h2 class="text-center" id="ProblemName">@ViewData["contestName"]</h2>
            @{
                <img class="img-responsive" src="@company.Logo" style="width:200px;" />
                <div />
                <table style="width:100%;display:none">

                    <tr>

                        <td width="100px">
                            @*<img src="@company.Logo" style="width:100px;" />*@
                        </td>

                        <td>

                            <table>

                                <tr>

                                    <td>
                                        <label id="EmailAddress">@company.EmailAddress</label>
                                        <label style="display:none;" id="PKCompany">@company.PKCompany</label>
                                    </td>
                                </tr>
                                <tr>

                                    <td>
                                        <label id="CompanyName">@company.CompanyName</label>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>



                </table>



            }
            <br />
            <div>
                @if (Model.Count > 0)
                {
                    <div class="mb-3">

                        <input class="form-control" type="text" id="UserName" name="UserName" required="required" placeholder="Name">

                    </div>
                    <div class="mb-3">
                        <br />
                        <input class="form-control" type="email" id="UserEmail" name="UserEmail" required="required" placeholder="Email Address">
                        <div class="mb-3"><br /></div>
                    </div>
                    <div>
                        @foreach (JudgementApp.Models.Data item in Model)
                        {

                            string QResult = "Q" + item.Id + "_R";

                            var q = "Q" + item.Id;
                            <input id="@q" value="@item.Id" style="display:none;" />

                            <div class="card shadow mb-4" id="Question-1">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="text-primary fw-bold m-0">Question @item.Row_Num</h6>
                                </div>
                                @if (item.Type == 1)
                                {
                                    <div class="card-body" style="text-align: left;">
                                        <label class="form-label" style="text-align: left;font-weight: bold;">will @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) hit  @Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany) by  @Main.GetParameter(item.Id, "p3", Convert.ToString(ViewData["contestName"]), company.PKCompany)?</label>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fact"><label class="form-check-label" for="formCheck-1">Fact</label></div>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fiction"><label class="form-check-label" for="formCheck-2">Fiction</label></div>
                                    </div>
                                }
                                @if (item.Type == 2)
                                {
                                    <div class="card-body" style="text-align: left;">
                                        <label class="form-label" style="text-align: left;font-weight: bold;">will @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) close  @Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany)  @Main.GetParameter(item.Id, "p3", Convert.ToString(ViewData["contestName"]), company.PKCompany)  @Main.GetParameter(item.Id, "p4", Convert.ToString(ViewData["contestName"]), company.PKCompany)?</label>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fact"><label class="form-check-label" for="formCheck-1">Fact</label></div>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Fiction"> <label class="form-check-label" for="formCheck-2">Fiction</label></div>
                                    </div>
                                }
                                @if (item.Type == 3)
                                {
                                    <div class="card-body" style="text-align: left;">
                                        <label class="form-label" style="text-align: left;font-weight: bold;">will  @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) have a higher return in the AM or PM?</label>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="AM"><label class="form-check-label" for="formCheck-1">AM</label></div>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="PM"><label class="form-check-label" for="formCheck-2">PM</label></div>
                                    </div>
                                }
                                @if (item.Type == 4)
                                {
                                    <div class="card-body" style="text-align: left;">
                                        <label class="form-label" style="text-align: left;font-weight: bold;">will  @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) have a higher return before or after  @Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany)?</label>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="Before"><label class="form-check-label" for="formCheck-1">Before</label></div>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="After"><label class="form-check-label" for="formCheck-2">After</label></div>
                                    </div>
                                }
                                @if (item.Type == 5)
                                {
                                    <div class="card-body" style="text-align: left;">
                                        <label class="form-label" style="text-align: left;font-weight: bold;">will  @Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany) outperform  @Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany) @Main.GetParameter(item.Id, "p3", Convert.ToString(ViewData["contestName"]), company.PKCompany)?</label>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="@Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany)"><label class="form-check-label" for="formCheck-1">@Main.GetParameter(item.Id, "p1", Convert.ToString(ViewData["contestName"]), company.PKCompany)</label></div>
                                        <div class="form-check"><input class="form-check-input" type="radio" name="@QResult" value="@Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany)"><label class="form-check-label" for="formCheck-2">@Main.GetParameter(item.Id, "p2", Convert.ToString(ViewData["contestName"]), company.PKCompany)</label></div>
                                    </div>
                                }

                            </div>
                        }


                        <input id="total" value="@Model.Count" style="display:none;" />
                    </div>

                    if (Model[0].IsExpired == true)
                    {
                        <span style="color:rgb(16,173,137); margin-top: 10px;">This contest is completed. Please go here to view results.</span>
                    }
                    else
                    {
                        <button class="btn btn-primary" type="button" onclick="onUpdate();" style="width: 170px">Submit</button>

                    }
                }
                else
                {
                    <span style="color:rgb(16,173,137); margin-top: 10px;">This contest is completed. Please go here to view results.</span>

                }
                <br />
                <button class="btn btn-primary" type="button" onclick="location.href = '/leaderboard-@company.CompanyName-@ViewData["contestName"]'">Leaderboard</button>
            </div>

        </form>
    </section>
    <script src="~/assets/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/assets/js/theme.js"></script>
    <script type="text/javascript">
        var result;

        function onUpdate() {
            debugger;

            var model = {};
            model.UserName = $("#UserName").val();
            model.UserEmail = $("#UserEmail").val();

            if (model.UserName.length < 1) {
                alert("Please enter the username")
            }
            else if (model.UserEmail.length < 1) {
                alert("Please enter the Email Address")

            }
            else {

                model.UserName = $("#UserName").val();
                model.UserEmail = $("#UserEmail").val();
                model.ProblemName = $("#ProblemName").html();
                var CompanyName = $("#CompanyName").html();
                model.FKCompany = $("#PKCompany").html();

                debugger;
                $.get("/Judgement/CheckUserEmail?UserName=" + model.UserName + '&ProblemName=' + model.ProblemName + '&FKCompanyID=' + model.FKCompany).then(s => {
                    debugger;
                    if (s == true) {
                        alert("Name already exists. Please choose another")
                        return;
                    }
                    else {

                        var judgment = [];
                        result.forEach(item => {
                            debugger;
                            if (item.P1 == null || item.P1 == undefined) {
                                item.P1 = "null"
                            }
                            if (item.P2 == null || item.P2 == undefined) {
                                item.P2 = "null"
                            }
                            if (item.P3 == null || item.P3 == undefined) {
                                item.P3 = "null"
                            }
                            if (item.P4 == null || item.P4 == undefined) {
                                item.P4 = "null"
                            }
                            var QResult = $("input[name='Q" + item.Id + "_R']:checked").val();
                            judgment.push({ ID: item.Id, QResult: QResult, QType: item.Type, Param: item.P1 + "," + item.P2 + "," + item.P3 + "," + item.P4 })
                            var q = "Q" + item.Id;
                        })

                        model.Result = judgment;
                        var fd = new FormData();
                        fd.append('data', JSON.stringify(model));
                        $.ajax({
                            url: '/Judgement/saveJudgement',
                            data: fd,
                            processData: false,
                            contentType: false,
                            type: 'POST',
                            success: function (data) {
                                window.location = "/Judgement/ResponseSubmitted?ProblemName=" + model.ProblemName + '&CompanyName=' + CompanyName

                            }
                        });
                    }
                });

            }
        }
        $(function () {

            var ProblemName = $("#ProblemName").html();
            var PKCompany = Number.parseInt($("#PKCompany").html());
            $.get("/Judgement/LoadData?id=" + PKCompany + '&ProblemName=' + ProblemName).then(s => {

                debugger;
                result = s;
                setTimeout(y => {
                    setHeight();
                },50)
            })
        })
        function setHeight() {
            var height = $(window).height();
            $("#mainSection").css({ "min-height": height+"px"})
        }
    </script>
</body>

